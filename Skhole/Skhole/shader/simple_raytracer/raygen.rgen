#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_ARB_shading_language_include : require

#include "./payload.glsl"

//layout(location = 0) rayPayloadEXT vec3 payload;
layout(location = 0) rayPayloadEXT PayLoadStruct payload;

layout(binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, rgba8) uniform image2D image;

void main()
{
    vec2 uv = (vec2(gl_LaunchIDEXT.xy) + vec2(0.5)) / vec2(gl_LaunchSizeEXT.xy);
    vec3 origin = vec3(0, 0, 5);
    vec3 target = vec3(uv * 2.0 - 1.0, 2);
    vec3 direction = normalize(target - origin);

    payload.basecolor = vec3(0);
    payload.normal = vec3(0);
    payload.isMiss = false;

    traceRayEXT(
        topLevelAS,
        gl_RayFlagsOpaqueEXT,
        0xff,       // cullMask
        0, 0, 0,    // sbtRecordOffset, sbtRecordStride, missIndex
        origin,
        0.001,      // tMin
        direction,
        10000.0,    // tMax
        0           // payloadLocation
    );

    vec3 col = payload.basecolor * payload.normal;
    if(payload.isMiss) col = vec3(0.0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(col,0.0));
}
